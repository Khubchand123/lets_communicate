{"ast":null,"code":"var _jsxFileName = \"C:\\\\lets_communicate\\\\src\\\\Components\\\\Notes.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect } from 'react';\nimport noteContext from '../context/notes/noteContext';\nimport Noteitem from \"./Noteitem\";\nimport AddNote from './AddNote';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Notes = () => {\n  _s();\n  let navigate = useNavigate();\n  const context = useContext(noteContext);\n  const {\n    notes,\n    getNotes\n  } = context;\n  const {\n    topics,\n    fetchTopics\n  } = context;\n  useEffect(() => {\n    if (localStorage.getItem('token')) {\n      getNotes();\n    } else {\n      navigate(\"/login\");\n    }\n  }, []);\n  useEffect(() => {\n    if (localStorage.getItem('token')) {\n      fetchTopics();\n    } else {\n      navigate(\"/login\");\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AddNote, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row my-3 mx-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Your Notes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), notes.length === 0 && 'No notes to display', notes.map(note => {\n        return /*#__PURE__*/_jsxDEV(Noteitem, {\n          note: note\n        }, note._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 32\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(Notes, \"XW2kg3Kr6G00hOkaOpxKOHIL5RE=\", false, function () {\n  return [useNavigate];\n});\n_c = Notes;\nexport default Notes;\nvar _c;\n$RefreshReg$(_c, \"Notes\");","map":{"version":3,"names":["React","useContext","useEffect","noteContext","Noteitem","AddNote","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","Notes","_s","navigate","context","notes","getNotes","topics","fetchTopics","localStorage","getItem","children","fileName","_jsxFileName","lineNumber","columnNumber","className","length","map","note","_id","_c","$RefreshReg$"],"sources":["C:/lets_communicate/src/Components/Notes.js"],"sourcesContent":["import React, { useContext,useEffect } from 'react'\r\nimport noteContext from '../context/notes/noteContext';\r\nimport Noteitem from \"./Noteitem\";\r\nimport AddNote from './AddNote';\r\nimport { useNavigate } from 'react-router-dom';\r\nconst Notes = () => {\r\n    let navigate = useNavigate();\r\n    const context = useContext(noteContext);\r\n    \r\n    const {notes, getNotes} = context;\r\n    const {topics,fetchTopics} = context;\r\n    useEffect(() => {\r\n        if(localStorage.getItem('token')){\r\n            getNotes()\r\n        }\r\n        else{\r\n            navigate(\"/login\");\r\n        }\r\n    }, [])\r\n    useEffect(() => {\r\n        if(localStorage.getItem('token')){\r\n            fetchTopics()\r\n        }\r\n        else{\r\n            navigate(\"/login\");\r\n        }\r\n    }, [])\r\n    return (\r\n        <>\r\n            <AddNote />\r\n            <div className=\"row my-3 mx-4\">\r\n                <h2>Your Notes</h2>\r\n                \r\n                    {notes.length===0 && 'No notes to display'}\r\n                \r\n                {\r\n                    notes.map((note) => {\r\n                        return <Noteitem key={note._id} note={note} />;\r\n                    })\r\n                }\r\n            </div>\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Notes\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAACC,SAAS,QAAQ,OAAO;AACnD,OAAOC,WAAW,MAAM,8BAA8B;AACtD,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,OAAO,MAAM,WAAW;AAC/B,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAC/C,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,IAAIC,QAAQ,GAAGP,WAAW,EAAE;EAC5B,MAAMQ,OAAO,GAAGb,UAAU,CAACE,WAAW,CAAC;EAEvC,MAAM;IAACY,KAAK;IAAEC;EAAQ,CAAC,GAAGF,OAAO;EACjC,MAAM;IAACG,MAAM;IAACC;EAAW,CAAC,GAAGJ,OAAO;EACpCZ,SAAS,CAAC,MAAM;IACZ,IAAGiB,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,EAAC;MAC7BJ,QAAQ,EAAE;IACd,CAAC,MACG;MACAH,QAAQ,CAAC,QAAQ,CAAC;IACtB;EACJ,CAAC,EAAE,EAAE,CAAC;EACNX,SAAS,CAAC,MAAM;IACZ,IAAGiB,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,EAAC;MAC7BF,WAAW,EAAE;IACjB,CAAC,MACG;MACAL,QAAQ,CAAC,QAAQ,CAAC;IACtB;EACJ,CAAC,EAAE,EAAE,CAAC;EACN,oBACIL,OAAA,CAAAE,SAAA;IAAAW,QAAA,gBACIb,OAAA,CAACH,OAAO;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eACXjB,OAAA;MAAKkB,SAAS,EAAC,eAAe;MAAAL,QAAA,gBAC1Bb,OAAA;QAAAa,QAAA,EAAI;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,EAEdV,KAAK,CAACY,MAAM,KAAG,CAAC,IAAI,qBAAqB,EAG1CZ,KAAK,CAACa,GAAG,CAAEC,IAAI,IAAK;QAChB,oBAAOrB,OAAA,CAACJ,QAAQ;UAAgByB,IAAI,EAAEA;QAAK,GAArBA,IAAI,CAACC,GAAG;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAgB;MAClD,CAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAEJ;EAAA,gBAEP;AAEX,CAAC;AAAAb,EAAA,CAvCKD,KAAK;EAAA,QACQL,WAAW;AAAA;AAAAyB,EAAA,GADxBpB,KAAK;AAyCX,eAAeA,KAAK;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}